#!/bin/sh
###############################################################################
# mount.remote - A script to mount GDrive remote for use with Plex
###############################################################################
# CONFIGURATION
###############################################################################
# shellcheck source=config

########## CONFIGURATION ##########
. "/cloud-storage/scripts/config"
###################################


###############################################################################
# FUNCTIONS
###############################################################################
mount_gdrive () {
	if [ "$use_gdrive" = 0 ]; then
		return 3
	fi

	# Make sure GD mountpoint exists.
	if [ ! -d "${cloud_encrypt_dir}" ]; then
		mkdir "${cloud_encrypt_dir}"
	fi

	# Mount GD if not already mounted.
	if ! mountpoint -q "$cloud_encrypt_dir" ; then
		echo "[ $(date ${date_format}) ] Mounting Google Drive mountpoint: ${cloud_encrypt_dir}"
		screen -dmS plexdrive "$plexdrive_bin" --config "${plexdrive_dir}" "${plexdrive_options}" "${cloud_encrypt_dir}"
	else
		echo "[ $(date ${date_format}) ] Google Drive mountpoint: ${cloud_encrypt_dir} already mounted."
	fi
}

mount_local_media () {
	# Make sure decrypted GD directory exists.
	if [ ! -d "${cloud_decrypt_dir}" ]; then
		mkdir "${cloud_decrypt_dir}"
	fi

	if ! mountpoint -q "$cloud_decrypt_dir"; then
		echo "[ $(date ${date_format}) ] Mounting decrypted Google Drive: ${cloud_decrypt_dir}"
		"${rclone_bin}" mount --config="${rclone_cfg}" "${rclone_options}" "${rclone_local_endpoint}" "${cloud_decrypt_dir}" >/dev/null 2>&1
	else
		echo "[ $(date ${date_format}) ] Decrypted Google Drive mountpoint: ${cloud_decrypt_dir} already mounted."
	fi
}

mount_union () {
	# Make sure combined plex media directory exists.
	if [ ! -d "${local_media_dir}" ]; then
		mkdir "${local_media_dir}"
	fi


	# Mount plex media directory if not already mounted.
	if ! mountpoint -q "${local_media_dir}"; then
		echo "[ $(date ${date_format}) ] Mounting Plex library mountpoint: ${local_media_dir}"
		if [ "$use_gdrive" = 1 ]; then
			ufs_mounts=":${cloud_decrypt_dir}=RO"
		fi
		if [ "$ufs_allow_other" = 1 ]; then
			ufs_options=",allow_other"
		fi

		ufs_mounts="${local_decrypt_dir}=RW${ufs_mounts}"

		"${ufs_bin}" -o "cow${ufs_options}" "${ufs_mounts}" "${local_media_dir}"
	else
		echo "[ $(date ${date_format}) ] Plex library mountpoint: ${local_media_dir} already mounted."
	fi
}

mount_cache () {
	# Make sure cache directory exists. If not, create it.
	if [ ! -d "${cached_media_dir}" ]; then
		mkdir -p "${cached_media_dir}"
	fi

	if [ ! -d "${local_cache_dir}" ]; then
		mkdir -p "${local_cache_dir}"
	fi

	# Mount cache directory if not already mounted.
	if ! mountpoint -q "${cached_media_dir}"; then
		echo "[ $(date ${date_format}) ] Mounting local file cache: ${cached_media_dir}"

		if [ "$ufs_allow_other" = 1 ]; then
			ufs_options=",allow_other"
		fi

		"${ufs_bin}" -o "cow${ufs_options}" "${local_cache_dir}=RO:${local_media_dir}=RW" "${cached_media_dir}"

	else
		echo "[ $(date ${date_format}) ] Local file cache: ${cached_media_dir} already mounted."
	fi
}

mount_help () {
	echo "$0 all|gdrive|local|union|cache"
}

###############################################################################

case "$1" in
	google|gdrive|gd)
		mount_gdrive
	;;
	union)
		mount_union
	;;
	cache)
		mount_cache
	;;
	local)
		mount_local_media
	;;
	all)
		mount_local_media
		mount_gdrive
		mount_union
		mount_cache
	;;
	*)
		mount_help
	;;
esac

